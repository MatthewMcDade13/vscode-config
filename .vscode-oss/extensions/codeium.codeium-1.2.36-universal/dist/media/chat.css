:root {
  --container-padding: 12px;
  --input-padding-vertical: 6px;
  --input-padding-horizontal: 4px;
  --input-margin-vertical: 4px;
  --input-margin-horizontal: 0;
  --color-user: rgba(61, 67, 72, 0.2);
  --color-bot: rgba(9, 182, 162, 0.2);
}

html {
  height: 100%;
}

body {
  padding: 0;
  box-sizing: border-box;
  color: var(--vscode-foreground);
  font-size: var(--vscode-font-size);
  font-weight: var(--vscode-font-weight);
  font-family: var(--vscode-font-family);
  background-color: var(--vscode-editor-background);
  height: 100%;
  width: 100%;
}

/* Taken from https://css-tricks.com/the-cleanest-trick-for-autogrowing-textareas/ */
.grow-wrap {
  /* easy way to plop the elements on top of each other and have them both sized based on the tallest one's height */
  display: grid;
}
.grow-wrap::after {
  /* Note the weird space! Needed to prevent jumpy behavior */
  content: attr(data-replicated-value) " ";

  /* This is how textarea text behaves */
  white-space: pre-wrap;

  /* Hidden from view, clicks, and screen readers */
  visibility: hidden;
}
.grow-wrap > textarea {
  /* You could leave this, but after a user resizes, then it ruins the auto sizing */
  resize: none;

  /* Firefox shows scrollbar on growth, you can hide like this. */
  overflow: hidden;
}
.grow-wrap > textarea,
.grow-wrap::after {
  /* Identical styling required!! */
  border: 1px solid black;
  padding: 0.5rem;
  font: inherit;

  /* Place on top of each other */
  grid-area: 1 / 1 / 2 / 2;
}

.copy-button {
  background-color: #1e1e1e;
  border: solid 1px #1e1e1e;
  font-family: var(--vscode-font-family);
  color: #dcdcdc;
  padding: 2px 10px;
  cursor: pointer;
}

.copy-button:hover {
  background-color: #282828;
  border: solid 1px #282828;
}

.copy-button:active {
  background-color: #303030;
  border: solid 1px #303030;
}

/******************** Panel Layout Styles ********************/
.react-app-container {
  width: 100%;
  height: 100%;
}
