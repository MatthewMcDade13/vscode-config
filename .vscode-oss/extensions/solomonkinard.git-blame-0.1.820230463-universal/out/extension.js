"use strict";var Ri=Object.create;var Le=Object.defineProperty;var Ni=Object.getOwnPropertyDescriptor;var Gi=Object.getOwnPropertyNames;var Qi=Object.getPrototypeOf,Mi=Object.prototype.hasOwnProperty;var qi=(t,e)=>{for(var i in e)Le(t,i,{get:e[i],enumerable:!0})},$t=(t,e,i,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of Gi(e))!Mi.call(t,o)&&o!==i&&Le(t,o,{get:()=>e[o],enumerable:!(s=Ni(e,o))||s.enumerable});return t};var P=(t,e,i)=>(i=t!=null?Ri(Qi(t)):{},$t(e||!t||!t.__esModule?Le(i,"default",{value:t,enumerable:!0}):i,t)),ji=t=>$t(Le({},"__esModule",{value:!0}),t);var As={};qi(As,{activate:()=>Fs,deactivate:()=>$s});module.exports=ji(As);var S=P(require("vscode"));var H=P(require("vscode")),Mt=P(require("child_process"));var Rt=P(require("child_process"));var Ue=P(require("child_process")),st=P(require("vscode"));function At(){let t="git",e="vscode.git";if(st.extensions.all.some((i,s,o)=>i.id==e&&i.isActive)){let i=st.extensions.getExtension(e);i?.exports.enabled&&(t=i.exports.getAPI(1).git.path)}return t}function k(t){let e=["rev-parse","--show-toplevel"],[i,s,o]=y(t,e),r=Ue.spawnSync(i,s,o);return r.status==0&&r.stderr==""?r.stdout.trim():(console.warn("Error: Couldn't find top level directory",r.status,r.error),"")}function Bt(t){let e=new Map;return t&&t.split(`
`).map(i=>{let s=i.indexOf(" "),o=i.substring(0,s),r=i.substring(s+1);e.set(o,r)}),e}function Vt(t){return new Promise((e,i)=>{let s="";t.query&&(s=JSON.parse(t.query).ref);let o=2,r=["log","-M",`-${o}`,"--follow","--name-only","--format=%H",s,"--",`"${t.fsPath}"`],[n,c,d]=y(t,r),u="",m=Ue.spawn(n,c,d);m.stdout.on("data",a=>{let b=a.toString().trim().split(`
`),f=b[0];if(!new RegExp(/^[0-9a-fA-F]{40}$/).test(f)){i();return}if(o--,o>0){u=b[b.length-1];return}let g="";if(g==u)g=t.fsPath;else{let C=b[b.length-1];g=`${k(t)}/${C}`}e({sha:f,fsPath:g})}),m.on("error",a=>console.log("error",a)),m.on("exit",(a,l)=>{})})}var Ot=require("path"),Hi=require("os");function y(t,e){let i=At(),s,o={cwd:__dirname,encoding:"utf8",shell:!0};return s=["-C",`"${Ot.dirname(t.fsPath)}"`,...e],Hi.platform()==="win32"&&(i="cmd",s=["/s","/c","git",...s],o.cwd=Ot.dirname(t.fsPath)),[i,s,o]}function Fe(t,e){return new Promise((i,s)=>{let[o,r,n]=y(t,e),c=Rt.spawn(o,r,n),d="";c.on("error",u=>console.log("error",u)),c.on("exit",(u,m)=>{i(d)}),c.stdout.on("data",u=>d+=u.toString())})}var $e=class{constructor(e,i,s,o,r,n,c){this.sha=e,this.date=i,this.author=s,this.mail=o,this.summary=r,this.previous=n,this.filename=c}};var V={prefix:"",showStatusBar:!0};var _=P(require("vscode")),rt=P(require("child_process"));var Ae=P(require("vscode"));function Be(){return De("gitWebUrl")??""}function De(t){return Gt().get(t)}function Ve(){Ae.commands.executeCommand("workbench.action.openSettings","Git Blame")}function Nt(t,e){Gt().update(t,e)}function Gt(){return Ae.workspace.getConfiguration(V.prefix)}function ie(t){let e="";if(!t)return"";let i=new Date(parseInt(t+"000")),s=i.getMonth()+1,o=i.getFullYear(),r=i.getDate(),n=(c,d)=>c>d?c.toString():`0${c.toString()}`;return e=`${o}-${n(s,9)}-${n(r,9)} `,e}var pe=P(require("vscode"));function Ji(t){return!(!t||t==null||t=="")}async function Oe(t){let e=Be();if(!Ji(e)){pe.window.showInformationMessage("Url?","Settings").then(i=>{i=="Settings"&&Ve()});return}e=e.replace("$ID",t),pe.env.openExternal(pe.Uri.parse(e))}var G=P(require("vscode"));var ke=P(require("vscode")),Wi=require("path"),q=class{static showPatch(e,i){let s=ke.Uri.from({scheme:"git",path:e,query:JSON.stringify({path:e,ref:i})}),o=ke.Uri.from({scheme:"git",path:e,query:JSON.stringify({path:e,ref:`${i}^`})}),r=`${Wi.basename(s.fsPath)} (patch)`;ke.commands.executeCommand("vscode.diff",o,s,r)}};var Re=require("path");function ye(t,e,i,s,o){switch(o){case"File":{let r=Re.join(t,s);G.workspace.openTextDocument(G.Uri.parse(r)).then(n=>G.window.showTextDocument(n).then(c=>{}));break}case"Patch":{let r=Re.join(t,s);q.showPatch(r,i);break}case"Diff":{let r=Re.join(t,s),n="";e.query&&(n=JSON.parse(e.query).ref);let c=G.Uri.from({scheme:"git",path:r,query:JSON.stringify({path:r,ref:n})}),d=G.Uri.from({scheme:"git",path:r,query:JSON.stringify({path:r,ref:i})}),u=`${Re.basename(c.fsPath)} (diff)`;G.commands.executeCommand("vscode.diff",d,c,u);break}case"Full Patch":{let r=Date.now(),n=JSON.stringify({ref:i,ts:r,fsPath:e.fsPath}),c=G.Uri.from({scheme:"git-blame.provider.fullPatch",path:".diff",query:n});G.workspace.openTextDocument(c).then(d=>{G.window.showTextDocument(d).then(u=>{})});break}}}var Ne=require("path");function zi(t,e){let i=Date.now(),s=JSON.stringify({ref:e,ts:i,fsPath:t}),o=_.Uri.from({scheme:`${V.prefix}.gitDiff`,path:".diff",query:s});_.workspace.openTextDocument(o).then(r=>{_.window.showTextDocument(r).then(n=>{})})}async function se(t,e){let i=t.document.uri;j({sha:e},i,!1)}async function j(t,e,i=!0){if(!t.sha)return;let s=_.window.createQuickPick();s.show(),s.busy=!0,s.placeholder=`commit ${t.sha}`;let o=[];o.push({label:ie(t?.date)??""}),o.push({label:`${t.author} ${t.mail}`??""}),o.push({label:t.sha??""}),o.push({label:t.summary??""}),s.items=o;let r=new Map,n=(p,v)=>{let T=_.Uri.from({scheme:"git",path:v,query:JSON.stringify({path:v,ref:p})}),w=`${e.path.split("/").pop()} (${p.slice(0,8)})`;_.commands.executeCommand("vscode.diff",e,T,w)},c=p=>{if(!p.previous)return;let[v,...T]=p.previous.split(" "),w=k(e);if(!w)return;let D=Ne.join(w,T.join(" "));return{sha:v,fsPath:D}},d=p=>{let v=c(p);if(!v)return;let T=v.sha,w=v.fsPath;n(T,w)},u="$(debug-breakpoint-data-unverified)",m=new Map([["web",{label:`${u} Open Online`,callback:()=>{Oe(t.sha)}}],["diffFileFromPrevious",{label:`${u} Diff that caused this line`,callback:async()=>{let p=k(e);if(!p||!t.filename)return;let v=Ne.join(p,t.filename),T=t.sha,w=_.Uri.from({scheme:"git",path:v,query:JSON.stringify({path:v,ref:T})}),D=c(t);D&&(v=D.fsPath);let I=_.Uri.from({scheme:"git",path:v,query:JSON.stringify({path:v,ref:`${T}^`})}),$=Ne.basename(w.fsPath);_.commands.executeCommand("vscode.diff",I,w,$)}}],["diffAllFilesFromPrevious",{label:`${u} Diff all files that caused this line`,callback:()=>{zi(e.fsPath,t.sha)}}],["message",{label:`${u} Copy commit message to clipboard`,callback:()=>{let p=r.get(t.sha);!p||_.env.clipboard.writeText(p)}}],["id",{label:`${u} Copy commit id to clipboard`,callback:()=>{let p=t.sha;_.env.clipboard.writeText(p)}}],["previousLineHistory",{label:`${u} Previous line history`,callback:()=>{d(t)}}],["previousFileHistory",{label:`${u} Previous file history`,callback:()=>{Vt(e).then(p=>{n(p.sha,p.fsPath)})}}],["filesByAuthor",{label:`${u} Get files by author`,callback:()=>{let p=v=>{if(!v)return;let T=_.window.createQuickPick();T.busy=!0,T.show(),T.keepScrollPosition=!0;let w=[];w.push({label:`${u} Author?`,description:v}),w.push({label:"",kind:_.QuickPickItemKind.Separator});let D;T.onDidHide(()=>{D.killed||D.kill(),T.dispose()}),T.onDidChangeSelection(N=>{if(N[0].label==`${u} Author?`){_.window.showInputBox().then(ae=>p(ae));return}let he=k(e);if(!he)return;let Pe=Ne.join(he,N[0].label);_.workspace.openTextDocument(Pe).then(ae=>{_.window.showTextDocument(ae).then(Bs=>{})})});let I=["log",`--author="${v}"`,'--format=""',"--name-only"],[$,L,F]=y(e,I);D=rt.spawn($,L,F),D.on("error",N=>console.log("error",N)),D.on("exit",(N,he)=>{w[0].description+=` (${w.length-1} files)`,setTimeout(()=>T.items=w),T.busy=!1});let te=new Set;te.add(""),D.stdout.on("data",N=>{let Pe=N.toString().split(`
`);for(let ae of Pe)te.has(ae)||(te.add(ae),w.push({label:ae}));setTimeout(()=>T.items=w)})};p(t.author)}}],["diffWorkingTree",{label:`${u} Diff working tree`,callback:()=>{let p=Date.now(),v=JSON.stringify({ts:p}),T=`${V.prefix}.diffWorkingTree`,w=".diff",D=v,I=_.Uri.from({scheme:T,path:w,query:D});_.workspace.openTextDocument(I).then($=>{_.window.showTextDocument($).then(L=>{})})}}],["settings",{label:`${u} Settings`,callback:()=>{Ve()}}]]);s.onDidChangeSelection(p=>{let v=p[0].label,T=new Map;for(let[L,F]of m)T.set(F.label,L);if(T.has(v)){s.dispose();let L=T.get(v),F=m.get(L);F?.callback&&F.callback();return}let w,D=De("config.logClickUrls");if(D){let L=JSON.parse(JSON.stringify(D));for(let F in L){if(w=v.match(F),!w||w.length<2)continue;let N=L[F].replace("$1",w[1]);_.env.openExternal(N),s.dispose();return}}let I=p[0].filename;if(I){let L=k(e);if(!L)return;ye(L,e,t.sha,I,"Patch")}s.value=v;let $=v.match(/https?\:\/\/[^\s]+/);$&&_.env.openExternal(_.Uri.parse($[0]))});let l=["log","-1",'--pretty="Author: %an <%ae>\\nDate: %ad\\n\\n%B"',"--numstat","--no-decorate",t.sha],[b,f,h]=y(e,l),g=rt.spawn(b,f,h);g.on("error",p=>console.log("error",p)),g.on("exit",(p,v)=>{s.busy=!1});let C=`commit ${t.sha}
`,E=new RegExp(/^(\d+|-)\s+(\d+|-)\s+(.*)$/);g.stdout.on("data",p=>{C+=p.toString()}),g.stdout.on("end",()=>{C=C.replaceAll("\\n",`
`),r.set(t.sha,C);let p=C.split(`
`);o=[];let v={files:0,plus:0,minus:0},T;for(let w of p){let D,I=[],$,L=w.match(E);if(L){let F=L[1],te=L[2];T=L[3],D=T,$=T?`+${F} -${te}`:void 0,v.files++,v.plus+=isNaN(Number(F))?0:Number(F),v.minus+=isNaN(Number(te))?0:Number(te);let N=(he,Pe)=>{I.push({iconPath:he,tooltip:Pe})};N(new _.ThemeIcon("go-to-file"),"File"),N(new _.ThemeIcon("diff"),"Patch"),N(new _.ThemeIcon("compare-changes"),"Diff")}else D=w.trim();D==""&&o[o.length-1].label==D||o.push({label:D,description:$,buttons:I,filename:T})}o[o.length-1].label===""&&o.pop();{let w=v.files!==1?"files":"file";w=`${v.files} ${w}`;let D=[{iconPath:new _.ThemeIcon("diff"),tooltip:"Full Patch"}];o.push({label:w,description:`+${v.plus} -${v.minus}`,buttons:D})}if(i){o[o.length-1].label!=""&&o.push({label:""}),o.push({label:"",kind:_.QuickPickItemKind.Separator});for(let[w,D]of m)o.push({label:D.label})}s.onDidTriggerItemButton(w=>{if(!w.button.tooltip)return;let D=k(e);!D||ye(D,e,t.sha,w.item.label,w.button.tooltip)}),s.items=o,s.busy=!1})}var U;function Ge(){U||(U=new _e),U.clearData()}async function qt(t){if(!t.document.uri.scheme.startsWith("git-blame")){if(U||(U=new _e),t.document.isDirty){let e=t.document.getText();U.prevDirtyText!==e&&(U.prevDirtyText=e,U.clearData(),await U.mapLinesToCommits(t))}else(U.isChangedFile(t.document.uri)||U.prevDirtyText!==void 0)&&(U.prevDirtyText=void 0,U.clearData(),await U.mapLinesToCommits(t));jt(t)}}function jt(t){let e=t.selection.active.line+1,i=U.getCommitForLine(e);if(!i){ce.notify(Z.names.onShaForCurrentLine,[]);return}let o=`${ie(i?.date)}${i?.author}`;H.commands.executeCommand(`${V.prefix}.setStatus`,o,i.summary),ce.notify(Z.names.onShaForCurrentLine,[i.sha])}function Ht(t){U||(U=new _e);let e=t.selection.active.line+1,i=U.getCommitForLine(e);if(i?.sha!="0".repeat(40)&&!!i)return i}function at(t){let e=Ht(t);if(!!e)return e.sha}function Jt(t){let e=Ht(t);!e||j(e,t.document.uri)}var _e=class{constructor(){this.line=0;this.recentLineUpdated=-1;this.maplineToSha_=new Map;this.mapShaToCommit_=new Map}getCommitForLine(e){let i=this.maplineToSha_.get(e);if(i)return this.mapShaToCommit_.get(i)}clearData(){delete this.uri,this.maplineToSha_.clear(),this.mapShaToCommit_.clear()}setData(e,i,s){this.uri=e,this.maplineToSha_=i,this.mapShaToCommit_=s}getData(){return[this.uri,this.maplineToSha_,this.mapShaToCommit_]}isChangedFile(e){return this.uri?!(this.uri.toString()==e.toString()&&this.uri.query==e.query):!0}async mapLinesToCommits(e){if(this.uri===e.document.uri)return;this.uri=e.document.uri,this.recentLineUpdated=-1;let i=s=>{let o=s.toString(),r=new RegExp(/(^[0-9a-fA-F]{40})\s(\d+)\s(\d+)\s(\d+)$/gm),n=Array.from(o.matchAll(r));for(let d=0;d<n.length;d++){let[u,m,a,l,b]=n[d];if(!this.mapShaToCommit_.has(m)){let g=n[d].index||0,C=n[d].input?.length||0;d+1<n.length&&(C=n[d+1].index||0);let E=n[d].input?.slice(g,C),p=Bt(E),v=p.get("author"),T=p.get("author-time"),w=p.get("author-mail"),D=p.get("summary"),I=p.get("previous"),$=p.get("filename"),L=new $e(m,T,v,w,D,I,$);this.mapShaToCommit_.set(m,L)}let f=parseInt(l),h=f+parseInt(b)-1;for(let g=f;g<=h;g++)this.maplineToSha_.set(g,m)}let c=e.selection.active.line+1;c!=this.recentLineUpdated&&this.maplineToSha_.has(c)&&(this.recentLineUpdated=c,jt(e))};await Ki(e.document.uri,i)}},oe;async function Ki(t,e){let i=Qt.get(t);if(typeof i<"u"){let m=new ge(t);if(m.fileStat=await ge.getFileStat(m.uri),m.equals(i)&&!H.window.activeTextEditor?.document.isDirty){oe&&!oe.killed&&oe.kill(),U.setData(t,new Map(i.maplineToSha),new Map(i.mapShaToCommit));let a=[];for(let[b,f]of i.maplineToSha)a[Number(b)-1]=f;ce.notify(Z.names.onShaListingIndexedByLine,a);let l=a.filter((b,f,h)=>h.indexOf(b)===f);ce.notify(Z.names.onAllShasForFile,l);return}}let s="";t.query&&(s=JSON.parse(t.query).ref);let o=H.window.activeTextEditor?.document.isDirty,r=["blame","--incremental"];if(!o)r.push(s,"--",`"${t.fsPath}"`);else{if(s!==""){oe.kill();return}r.push(`"${t.fsPath}"`,"--contents","-")}let[n,c,d]=y(t,r),u=()=>{let m=Mt.spawn(n,c,d);if(o&&H.window.activeTextEditor){let a=H.window.activeTextEditor.document.getText();m.stdin.write(a),m.stdin.end()}return m.stdout.on("data",a=>e(a)),m.on("error",a=>console.log("error",a)),m.on("exit",(a,l)=>{if(l=="SIGTERM"||a==null||a!=0)return;let[b,f,h]=U.getData(),g=new ge(t);ge.getFileStat(g.uri).then(p=>{g.fileStat=p,g.mapShaToCommit=new Map(h),g.maplineToSha=new Map(f),Qt.set(g)});let C=[];for(let[p,v]of f)C[Number(p)-1]=v;let E=C.filter((p,v,T)=>T.indexOf(p)===v);ce.notify(Z.names.onAllShasForFile,E),ce.notify(Z.names.onShaListingIndexedByLine,C)}),m};oe&&!oe.killed&&oe.kill(),oe=u()}function Wt(){let[t,e,i]=U.getData();return Array.from(e.values()).filter((r,n,c)=>c.indexOf(r)===n)}function zt(){let[t,e,i]=U.getData();return i}var ge=class{constructor(e){this.maplineToSha=new Map;this.mapShaToCommit=new Map;this.uri=e}static async getFileStat(e){return await H.workspace.fs.stat(e)}equals(e){return this.uri.toString()==e.uri.toString()&&this.fileStat?.mtime==e.fileStat?.mtime&&this.fileStat?.size==e.fileStat?.size}},nt=class{constructor(){this.maxFiles=30;this.files=new Map}set(e){let i=e.uri.toString(),s=e;this.files.has(i)&&(s=this.files.get(i),this.files.delete(i)),this.files.set(i,s),this.maybeEvict()}get(e){let i=e.toString();if(!this.files.has(i))return;let s=this.files.get(i);return this.files.delete(i),this.files.set(i,s),s}maybeEvict(){if(this.files.size>this.maxFiles)for(let[e,i]of this.files){this.files.delete(e);break}}},Qt=new nt;function Kt(t){let e=t.document.uri.with({fragment:"next",query:JSON.stringify({ts:Date.now()})});H.window.showTextDocument(e)}function Zt(t){let e=t.document.uri.with({fragment:"prev",query:JSON.stringify({ts:Date.now()})});H.window.showTextDocument(e)}var Z=class{constructor(){this.observers_=new Map}notify(e,i){if(!!this.observers_.has(e))for(let s of this.observers_.get(e))setTimeout(()=>s(i),0)}register(e,i){let s=[];this.observers_.has(e)&&(s=this.observers_.get(e)),s.push(i),this.observers_.set(e,s)}};Z.names=Object.freeze({onShaForCurrentLine:"onShaForCurrentLine",onAllShasForFile:"onAllShasForFile",onShaListingIndexedByLine:"onShaListingIndexedByLine"});var ce=new Z;function Qe(t,e){ce.register(t,e)}var Me=class{constructor(e){this.context_=e}set(e,i){return new Promise((s,o)=>{this.getState()?.update(e,i).then(r=>s())})}get(e){return this.getState()?.get(e)}del(e){this.getState()?.update(e,void 0)}clear(){this.getState()?.keys().forEach(e=>this.getState()?.update(e,void 0))}getState(){if(this.context_)return this.context_.workspaceState}};var we=P(require("vscode")),Yt=P(require("child_process"));var ve=class{constructor(){this.onDidChange_=new we.EventEmitter;this.onDidChange=this.onDidChange_.event;this.index_=0;this.chunk_=1e6;this.text_="";this.isProcessing_=!1}getChunk(){return this.text_.slice(this.index_,this.index_+this.chunk_)}provideTextDocumentContent(e){return new Promise(async(i,s)=>{switch(e.fragment){case"next":{let o=this.index_;this.index_+=this.chunk_;let r=this.getChunk();if(r==""){this.index_=o,s();return}i(r)}case"prev":{if(this.index_-=this.chunk_,this.index_<0){this.index_=0,s();return}i(this.getChunk())}case"start":{i(this.getChunk());return}default:if(!this.isProcessing_){this.text_="",this.index_=0,await this.process(e);let o=e.with({fragment:"start",query:JSON.stringify({ts:Date.now()})});we.window.showTextDocument(o)}}})}async process(e){return new Promise((i,s)=>{this.isProcessing_=!0;let o=JSON.parse(e.query),r=o.ref,n=["diff",`${r}^`,`${r}`,"-U0"],c=we.Uri.parse(o.fsPath),[d,u,m]=y(c,n),a=Yt.spawn(d,u,m);a.on("error",l=>{console.log("error",l),this.isProcessing_=!1,s()}),a.on("exit",(l,b)=>{this.isProcessing_=!1,i(void 0)}),a.stdout.on("data",l=>{this.text_+=l.toString()})})}};var Se=P(require("vscode")),ct=P(require("child_process"));var qe=class{constructor(){this.onDidChange_=new Se.EventEmitter;this.onDidChange=this.onDidChange_.event;this.index_=0;this.chunk_=1e8;this.text_="";this.isProcessing_=!1}getChunk(){return this.text_.slice(this.index_,this.index_+this.chunk_)}provideTextDocumentContent(e){return new Promise(async(i,s)=>{switch(e.fragment){case"start":{i(this.getChunk());return}default:if(!this.isProcessing_){this.text_="",this.index_=0,await this.process(e);let o=e.with({fragment:"start",query:JSON.stringify({ts:Date.now()})});Se.window.showTextDocument(o)}}})}async process(e){return new Promise((i,s)=>{this.isProcessing_=!0;let o=Se.window.activeTextEditor?.document.uri;if(!o){i(void 0);return}let r=k(o);if(!!r){{let n=["diff","-U0","@"],[c,d,u]=y(o,n);this.text_+=ct.spawnSync(c,d,u).stdout}{let n=[`ls-files -o --exclude-standard -z | xargs -I FILE -0 -n 1 git --no-pager diff /dev/null ${r}/FILE`],[c,d,u]=y(o,n);this.text_+=ct.spawnSync(c,d,u).stdout}i(void 0),this.isProcessing_=!1}})}};var Ze=P(require("vscode"));var A=P(require("vscode"));var Xt=P(require("child_process")),J=P(require("vscode"));var O=class{constructor(e){!new RegExp(/^[0-9a-fA-F]{40}$/).test(e)||(this.sha=e)}getSha(){return this.sha}};var mt=require("path"),dt=class extends J.TreeItem{constructor(i,s,o,r,n,c){super({label:r});this.description=`${s} ${o}`,this.tooltip=`${this.description}

${r}

${n}
${i}`,this.contextValue="commit",c.length>0&&(this.collapsibleState=J.TreeItemCollapsibleState.Collapsed),this.sha=new O(i),this.date=s,this.summary=r,this.author=o,this.body=n,this.files=c}},ut=class extends J.TreeItem{constructor(i,s,o){super({label:mt.basename(i)});this.description=mt.dirname(i),this.resourceUri=J.Uri.parse(mt.join(s,i)),this.contextValue="file",this.sha=o,this.command={title:"Patch",command:"git-blame.logView.showPatch",arguments:[this.resourceUri.fsPath,this.sha]}}},je=class{constructor(){this._onDidChangeTreeData=new J.EventEmitter;this.onDidChangeTreeData=this._onDidChangeTreeData.event;this.hasRefreshed_=!1;this.useReflog_=!1;this.maxCommitCount_=50}getTreeItem(e){return e}getChildren(e){return new Promise(async(i,s)=>{if(!this.hasRefreshed_)return i([]);if(e)return i(e.files);this.getLog().then(o=>{i(o)})})}refresh(e){this.author_=e.author,this.ref_=e.ref,this.hasRefreshed_=!0,this._onDidChangeTreeData.fire()}async getLog(){return new Promise((e,i)=>{let s=J.window.activeTextEditor?.document.uri;if(!s)return e([]);let o=k(s);if(!o)return e([]);let n=[this.useReflog_?"reflog":"log","--format='|%H%cs%ae|%s|%b|'",`-n ${this.maxCommitCount_}`,"--name-only"];this.author_&&n.push(`--author=${this.author_}`),this.ref_&&n.push(this.ref_),n.push("--",s.fsPath);let[c,d,u]=y(s,n),m=Xt.spawn(c,d,u),a="";m.on("error",l=>{i()}),m.on("exit",(l,b)=>{let f=[],h=new RegExp(/\|([0-9a-fA-F]{40})([0-9-]{10})([^\|]+)\|([^\|]+)\|([^\|]*)\|([^\|]+)/gs),g=a.matchAll(h);if(!!g){for(let C of g){let[E,p,v,T,w,D,I]=C,$=I.trim().split(`
`).filter(F=>F!="").map(F=>new ut(F,o,p)),L=new dt(p,v,T,w,D,$);f.push(L)}e(f)}}),m.stdout.on("data",l=>a+=l.toString())})}getAuthor(){return this.author_}getRef(){return this.ref_}openLog(e,i){j({sha:e},i)}setMaxNumberOfCommits(e){this.maxCommitCount_=e}toggleUseReflog(){this.useReflog_=!this.useReflog_}};var Yi=require("path");function ti(t){let e=new je,i=A.window.createTreeView("gitBlameFileView",{treeDataProvider:e});ei(e),t.subscriptions.push(A.commands.registerCommand("git-blame.fileView.refresh",()=>{!i.visible||e.refresh({})})),t.subscriptions.push(A.commands.registerCommand("git-blame.fileView.setAuthor",()=>{A.window.showInputBox({title:"Author?",value:e.getAuthor()}).then(s=>{typeof s>"u"||e.refresh({author:s})})})),t.subscriptions.push(A.commands.registerCommand("git-blame.fileView.setRef",()=>{A.window.showInputBox({title:"Ref?",value:e.getRef()}).then(s=>{typeof s>"u"||e.refresh({ref:s})})})),t.subscriptions.push(A.commands.registerTextEditorCommand("git-blame.fileView.openLog",(s,o,r)=>{e.openLog(r.sha,s.document.uri)})),t.subscriptions.push(A.workspace.onDidChangeConfiguration(s=>{s.affectsConfiguration("git-blame.fileView.maxCommitCount")&&ei(e)})),t.subscriptions.push(A.commands.registerCommand("git-blame.fileView.openArtifact",s=>{let o=s.resourceUri,r=s.sha,n=o.with({scheme:"git",query:JSON.stringify({ref:r,path:o.fsPath})}),c=`${Yi.basename(n.fsPath)} ${r.slice(0,3)}`;A.commands.executeCommand("vscode.open",n,{},c)})),t.subscriptions.push(A.commands.registerCommand("git-blame.fileView.toggleReflog",()=>{e.toggleUseReflog()})),t.subscriptions.push(A.commands.registerCommand("git-blame.fileView.showPatch",(s,o)=>{!i.visible||q.showPatch(s,o)}))}function ei(t){let e=A.workspace.getConfiguration("git-blame"),i="fileView.maxCommitCount",s=e.get(i)??50;t.setMaxNumberOfCommits(s)}var x=P(require("vscode"));var me=P(require("vscode"));var ii=require("path"),He=class{constructor(){this._onDidChangeTreeData=new me.EventEmitter;this.onDidChangeTreeData=this._onDidChangeTreeData.event;this.isProcessing_=!1;this.topLevelGitDir_="";this.files_=[];this.ref_="@^"}getTreeItem(e){return e}getChildren(e){return this.files_?this.files_.map(i=>{let s=ii.basename(i),o=new me.TreeItem(s);return o.description=i,o.resourceUri=me.Uri.parse(`${this.topLevelGitDir_}/${o.description}`),o.command={command:"git-blame.diffView.diffFile",title:"Diff",arguments:[o,this.ref_]},o}):null}async refresh(e){if(this.isProcessing_)return;this.isProcessing_=!0;let i=this.ref_,s=e.document.uri,o=k(s);if(!o)return;this.topLevelGitDir_=o;let r;r=["diff","--raw",i],await this.processRaw(s,r),r=["ls-files","--others","--exclude-standard"],await this.processSimple(s,r),this.isProcessing_=!1}reset(){this.isProcessing_=!1,this.files_=[],this.topLevelGitDir_="",this._onDidChangeTreeData.fire()}getRef(){return this.ref_}setRef(e){e&&(typeof e!="string"||/\s/.test(e))||(this.ref_=e)}async processWithTopLevelUri(e,i){return new Promise(async(s,o)=>{let r=k(e);if(!r)return s("");let n=me.Uri.parse(ii.join(r,"thisStubIsNeeded")),c=await Fe(n,i);return s(c)})}update(e){e.length!=0&&(this.files_.push(...e),this._onDidChangeTreeData.fire())}async processSimple(e,i){return new Promise(async(s,o)=>{let n=(await this.processWithTopLevelUri(e,i)).split(`
`).filter(c=>c!=="");this.update(n),s()})}async processRaw(e,i){return new Promise(async(s,o)=>{let r=await this.processWithTopLevelUri(e,i),n=/^:\d+ \d+ [0-9a-zA-Z]+ [0-9a-zA-Z]+ [0-9a-zA-Z]+\t([^\t\n]+)(?:\t([^\n]+))?$/gm,c=Array.from(r.matchAll(n)),d=[];for(let u of c)d.push(u[1]),!(typeof u[2]>"u")&&d.push(u[2]);this.update(d),s()})}};var si=P(require("child_process"));var re=class{static async run(e,i){return new Promise((s,o)=>{let[r,n,c]=y(i,e),d=si.spawn(r,n,c),u=[];d.on("exit",(m,a)=>s(u.join())),d.stdout.on("data",m=>u.push(m.toString())),d.on("error",m=>o())})}};var be=require("path");function oi(t,e){if(!t||!e)return;let i=t.with({scheme:"git",path:t.fsPath,query:JSON.stringify({path:t.fsPath,ref:e})}),s=`${be.basename(t.fsPath)} (diff)`;x.workspace.fs.stat(t).then(()=>x.commands.executeCommand("vscode.diff",i,t,s),()=>{x.workspace.openTextDocument(i).then(o=>x.window.showTextDocument(o))})}var lt=class{provideDocumentLinks(e,i){let s=k(x.Uri.parse(e.uri.path));if(!s)return;let o=/^(?:(?<prefix1>\+{3} b\/)(?<filename>.*))|(?:(?<prefix2>@@ -[^\s]+ \+)(?<line>\d+).*)$/gm,r=e.getText().matchAll(o),n=[],c,d;for(let u of r){if(!u.index||!u.groups)continue;let m,a;if(u.groups.filename&&u.groups.prefix1){let h=u.index;c=u.groups.filename;let g=h+u.groups.prefix1.length;m=e.positionAt(g),a=e.positionAt(g+c.length)}else if(u.groups.line&&u.groups.prefix2){if(!c)continue;let h=u.index;d=u.groups.line;let g=h+u.groups.prefix2.length;m=e.positionAt(g),a=e.positionAt(g+d.length)}if(!m||!a||!c)continue;let l=new x.Range(m,a),b,f=be.join(s,c);if(d){let h="git-blame.textDocumentContentProvider.diffFsPathToline",g=JSON.stringify({line:d,fsPath:f});b=x.Uri.from({scheme:h,query:g})}else b=x.Uri.file(f);n.push(new x.DocumentLink(l,b)),m=void 0,a=void 0,d=void 0}return n}};function ri(t){let e=new He,i=x.window.createTreeView("gitBlameDiffView",{treeDataProvider:e});t.subscriptions.push(x.commands.registerCommand("git-blame.diffView.refresh",()=>{if(!i.visible)return;e.reset();let o=x.window.activeTextEditor;!o||e.refresh(o)})),t.subscriptions.push(x.commands.registerCommand("git-blame.diffView.showFile",o=>{let r=x.Uri.parse(`${o.resourceUri}`);x.workspace.openTextDocument(r).then(n=>x.window.showTextDocument(n))})),t.subscriptions.push(x.commands.registerCommand("git-blame.diffView.diffFile",(o,r="@^")=>{oi(o.resourceUri,r)})),t.subscriptions.push(x.commands.registerTextEditorCommand("git-blame.diffView.diffStat",async(o,r,n)=>{let c=e.getRef(),d=["diff","--numstat",c],u=await re.run(d,o.document.uri);if(!u)return;let m={files:0,plus:0,minus:0},a=[],l=new RegExp(/^(\d+|-)\s+(\d+|-)\s+(.*)$/gm),b=u.matchAll(l);for(let f of b)if(f){let h=f[1],g=f[2],C=f[3],E=be.basename(C),p=`+${h} -${g}	${be.dirname(C)}`;m.files++,m.plus+=isNaN(Number(h))?0:Number(h),m.minus+=isNaN(Number(g))?0:Number(g),a.push({label:E,description:p,fsPath:C})}if(a.length!==0){{let f=m.files!==1?"files":"file";f=`${m.files} ${f}`,a.push({label:f,description:`+${m.plus} -${m.minus}`})}x.window.showQuickPick(a).then(f=>{if(!f)return;let h=f.fsPath;if(!h)return;let g=k(o.document.uri);!g||(h=be.join(g,h),oi(x.Uri.parse(h),c))})}})),t.subscriptions.push(x.commands.registerCommand("git-blame.diffView.setRef",()=>{let o=e.getRef();x.window.showInputBox({title:"Ref?",value:o}).then(r=>{typeof r>"u"||(e.setRef(r),x.commands.executeCommand("git-blame.diffView.refresh",r))})}));let s="git-blame.textDocumentContentProvider.raw";t.subscriptions.push(x.workspace.registerTextDocumentContentProvider(s,new class{provideTextDocumentContent(o){return JSON.parse(o.query)}})),t.subscriptions.push(x.workspace.registerTextDocumentContentProvider("git-blame.textDocumentContentProvider.openFsPathToline",new class{provideTextDocumentContent(o){let r=JSON.parse(o.query),n=x.Uri.file(r.fsPath),c=Number(r.line)-1;return x.commands.executeCommand("vscode.open",n).then(()=>{let d=x.window.activeTextEditor;if(!d)return;let u={lineNumber:c,by:"line",at:"top"};x.commands.executeCommand("revealLine",u);let m=d.document.lineAt(c).firstNonWhitespaceCharacterIndex,a=new x.Position(c,m);d.selection=new x.Selection(a,a)}),""}})),t.subscriptions.push(x.workspace.registerTextDocumentContentProvider("git-blame.textDocumentContentProvider.diffFsPathToline",new class{provideTextDocumentContent(o){let r=JSON.parse(o.query),n=Number(r.line)-1;n<=0&&(n=1);let c=x.Uri.file(r.fsPath),d=e.getRef(),u=c.with({scheme:"git",path:c.fsPath,query:JSON.stringify({path:c.fsPath,ref:d})}),m=be.basename(c.fsPath);return x.commands.executeCommand("vscode.diff",u,c,m).then(()=>{let a=x.window.activeTextEditor;if(!a)return;let l={lineNumber:n,by:"line",at:"top"};x.commands.executeCommand("revealLine",l);let b=a.document.lineAt(n).firstNonWhitespaceCharacterIndex,f=new x.Position(n,b);a.selection=new x.Selection(f,f)}),""}})),t.subscriptions.push(x.commands.registerTextEditorCommand("git-blame.diffView.diffAll",async o=>{let r=e.getRef(),n=o.document.uri,d=await Fe(n,["diff","-U0",r]),u=JSON.stringify(d),m=x.Uri.from({scheme:s,query:u,path:o.document.uri.fsPath}),a="files.diff";x.commands.executeCommand("vscode.open",m,{},a).then(()=>{let l=x.window.activeTextEditor?.document;!l||x.languages.setTextDocumentLanguage(l,"diff")})})),t.subscriptions.push(x.languages.registerDocumentLinkProvider({language:"diff",scheme:s},new lt))}var ne=P(require("vscode"));var ni=P(require("child_process")),de=P(require("vscode"));var Je=class{constructor(){this._onDidChangeTreeData=new de.EventEmitter;this.onDidChangeTreeData=this._onDidChangeTreeData.event;this.topLevelGitDir_="";this.commits_=[]}getTreeItem(e){return e}getChildren(e){return new Promise(async(i,s)=>{let o=this.editor_;if(!o){i(void 0);return}let r=this.line_,n=this.ref_,c=o.document.uri;if(c.scheme=="untitled"){i(void 0);return}let d=k(c);if(!d){i(void 0);return}if(this.topLevelGitDir_=d,await this.process(c,n,r),!this.commits_)return i(void 0),null;let u=this.commits_.map(m=>{let a=new de.TreeItem(m.summary),l=JSON.parse(m.right.query).ref;return a.tooltip=l,a.description=m.date,a.resourceUri=de.Uri.parse(m.right.fsPath),a.command={command:"gitBlame.lineView.showPatch",title:"Diff",arguments:[m.left,m.right]},a});i(u)})}refresh(e,i,s){if(this.reset(),!e||i==-1){this._onDidChangeTreeData.fire();return}this.editor_=e,this.line_=i,this.ref_=s,this._onDidChangeTreeData.fire()}reset(){this.commits_=[],this.topLevelGitDir_="",this.editor_=void 0,this.line_=void 0,this.ref_=void 0}async process(e,i,s){return new Promise((o,r)=>{let n=["log","--format=%H%cs%s","-L",`${s},+1:"${e.fsPath}"`],[c,d,u]=y(e,n),m=ni.spawn(c,d,u),a="";m.on("error",l=>{console.log("error",l),r()}),m.on("exit",(l,b)=>{let f=(C,E,p)=>{let v="";return C!="/dev/null"?v=`${this.topLevelGitDir_}/${C.slice(2)}`:v=p||"",de.Uri.from({scheme:"git",path:v,query:JSON.stringify({path:v,ref:E})})},h=new RegExp(/([0-9a-fA-F]{40})+([0-9-]{10})([^\n]+)\n+diff[^\n]+\n--- ([^\n]+)\n\+\+\+ ([^\n]+)/g),g=a.matchAll(h);for(let C of g){let[E,p,v,T,w,D]=C,I=f(D,p),$=f(w,`${p}^`,I.fsPath);this.commits_.push({left:$,right:I,summary:T,date:v})}o()}),m.stdout.on("data",l=>a+=l.toString())})}};var ss=require("path");function ai(t){let e=new Je,i=ne.window.createTreeView("gitBlameLineView",{treeDataProvider:e});t.subscriptions.push(ne.commands.registerCommand("gitBlame.lineView.refresh",()=>{if(!i.visible)return;let s=ne.window.activeTextEditor,o=s?s.selection.active.line+1:-1;ne.commands.executeCommand("gitBlame.getShaForCurrentLine").then(r=>{e.refresh(s,o,r)})})),t.subscriptions.push(ne.commands.registerCommand("gitBlame.lineView.showPatch",(s,o)=>{let r=`${ss.basename(o.fsPath)} (diff)`;ne.commands.executeCommand("vscode.diff",s,o,r)}))}var Q=P(require("vscode"));var ci=P(require("child_process")),W=P(require("vscode"));var ft=require("path"),ht=class extends W.TreeItem{constructor(i,s,o,r,n,c){super({label:r});this.description=`${s} ${o}`,this.tooltip=`${this.description}

${r}

${n}
${i}`,this.contextValue="commit",c.length>0&&(this.collapsibleState=W.TreeItemCollapsibleState.Collapsed),this.id=i,this.sha=new O(i),this.date=s,this.summary=r,this.author=o,this.body=n,this.files=c}},pt=class extends W.TreeItem{constructor(i,s,o){super({label:ft.basename(i)});this.description=ft.dirname(i),this.resourceUri=W.Uri.parse(ft.join(s,i)),this.contextValue="file",this.sha=o,this.command={title:"Patch",command:"git-blame.logView.showPatch",arguments:[this.resourceUri.fsPath,this.sha]}}},We=class{constructor(){this._onDidChangeTreeData=new W.EventEmitter;this.onDidChangeTreeData=this._onDidChangeTreeData.event;this.hasRefreshed_=!1;this.useReflog_=!1;this.maxCommitCount_=50}getTreeItem(e){return e}getChildren(e){return new Promise(async(i,s)=>{if(!this.hasRefreshed_)return i([]);if(e)return i(e.files);this.getLog().then(o=>{i(o)})})}refresh(e){this.author_=e.author,this.ref_=e.ref,this.hasRefreshed_=!0,this._onDidChangeTreeData.fire()}async getLog(){return new Promise((e,i)=>{let s=W.window.activeTextEditor?.document.uri;if(!s)return e([]);let o=k(s);if(!o)return e([]);let n=[this.useReflog_?"reflog":"log","--format='|%H%cs%ae|%s|%b|'",`-n ${this.maxCommitCount_}`,"--name-only"];this.author_&&n.push(`--author=${this.author_}`),this.ref_&&n.push(this.ref_);let[c,d,u]=y(s,n),m=ci.spawn(c,d,u),a="";m.on("error",l=>{i()}),m.on("exit",(l,b)=>{let f=[],h=new RegExp(/\|([0-9a-fA-F]{40})([0-9-]{10})([^\|]+)\|([^\|]+)\|([^\|]*)\|([^\|]+)/gs),g=a.matchAll(h);if(!!g){for(let C of g){let[E,p,v,T,w,D,I]=C,$=I.trim().split(`
`).filter(F=>F!="").map(F=>new pt(F,o,p)),L=new ht(p,v,T,w,D,$);f.push(L)}e(f)}}),m.stdout.on("data",l=>a+=l.toString())})}getAuthor(){return this.author_}getRef(){return this.ref_}openLog(e,i){j({sha:e},i)}setMaxNumberOfCommits(e){this.maxCommitCount_=e}toggleUseReflog(){this.useReflog_=!this.useReflog_}};var Do=require("path");function di(t){let e=new We,i=Q.window.createTreeView("gitBlameLogView",{treeDataProvider:e});mi(e),t.subscriptions.push(Q.commands.registerCommand("git-blame.logView.refresh",()=>{!i.visible||e.refresh({})})),t.subscriptions.push(Q.commands.registerCommand("git-blame.logView.setAuthor",()=>{Q.window.showInputBox({title:"Author?",value:e.getAuthor()}).then(s=>{typeof s>"u"||e.refresh({author:s})})})),t.subscriptions.push(Q.commands.registerCommand("git-blame.logView.setRef",()=>{Q.window.showInputBox({title:"Ref?",value:e.getRef()}).then(s=>{typeof s>"u"||e.refresh({ref:s})})})),t.subscriptions.push(Q.workspace.onDidChangeConfiguration(s=>{s.affectsConfiguration("git-blame.logView.maxCommitCount")&&mi(e)})),t.subscriptions.push(Q.commands.registerCommand("git-blame.logView.showPatch",(s,o)=>{!i.visible||q.showPatch(s,o)})),t.subscriptions.push(Q.commands.registerCommand("git-blame.logView.toggleReflog",()=>{e.toggleUseReflog()}))}function mi(t){let e=Q.workspace.getConfiguration("git-blame"),i="logFilesView.maxCommitCount",s=e.get(i)??50;t.setMaxNumberOfCommits(s)}var le=P(require("vscode"));var ui=P(require("child_process")),ue=P(require("vscode"));var gt=class extends ue.TreeItem{},ze=class{constructor(){this._onDidChangeTreeData=new ue.EventEmitter;this.onDidChangeTreeData=this._onDidChangeTreeData.event;this.topLevelGitDir_="";this.commits_=[]}getTreeItem(e){return e}getChildren(e){return new Promise(async(i,s)=>{let o=this.editor_;if(!o){i(void 0);return}let r=o.document.uri,n=k(r);if(!n)return;this.topLevelGitDir_=n;let c;if(await this.process(r),!this.commits_)return null;let d=this.commits_.map(u=>{let m=new gt(u.summary);m.description=u.date;let a=JSON.parse(u.right.query).ref;return m.tooltip=a,m.resourceUri=ue.Uri.parse(u.right.fsPath),m.command={command:"gitBlame.fileView.showPatch",title:"Diff",arguments:[u.left,u.right]},m.contextValue="commit",m.sha=new O(a),m});i(d)})}refresh(e){if(this.reset(),!e){this._onDidChangeTreeData.fire();return}this.editor_=e,this._onDidChangeTreeData.fire()}reset(){this.commits_=[],this.topLevelGitDir_="",this.editor_=void 0}async process(e){return new Promise((i,s)=>{let o=["log","--follow","--name-only","--format=%H%cs%s","--",`"${e.fsPath}"`],[r,n,c]=y(e,o),d=ui.spawn(r,n,c),u="";d.on("error",m=>console.log("error",m)),d.on("exit",(m,a)=>{let l=(h,g)=>{let C=`${this.topLevelGitDir_}/${h}`;return ue.Uri.from({scheme:"git",path:C,query:JSON.stringify({path:C,ref:g})})},b=new RegExp(/([0-9a-fA-F]{40})+([0-9-]{10})([^\n]+)\n\n([^\n]+)/g),f=u.matchAll(b);for(let h of f){let[g,C,E,p,v]=h,T=l(v,C),w=l(v,`${C}^`);this.commits_.push({left:w,right:T,summary:p,date:E})}i()}),d.stdout.on("data",m=>u+=m.toString())})}};var as=require("path");function li(t){let e=new ze,i=le.window.createTreeView("gitBlameDocumentView",{treeDataProvider:e});t.subscriptions.push(le.commands.registerCommand("gitBlame.fileView.refresh",()=>{!i.visible||e.refresh(le.window.activeTextEditor)})),t.subscriptions.push(le.commands.registerCommand("gitBlame.fileView.showPatch",(s,o)=>{let r=`${as.basename(o.fsPath)} (diff)`;le.commands.executeCommand("vscode.diff",s,o,r)}))}var Y=P(require("vscode"));var fi=P(require("child_process")),R=P(require("vscode"));var vt=require("path");async function ms(t,e,i){return new Promise(async(s,o)=>{let r=t.getSha();if(!r)return s(void 0);let n=["log","--format=''","--name-only",r,"-1"],c=await re.run(n,e);if(!c)return s(void 0);let d=new RegExp(/(.+)/s),u=c.match(d);if(!u)return s(void 0);let[m,a]=u,l=a.trim().split(`
`).filter(f=>f!="").map(f=>new bt(f,i,r)),b=new wt(l);s(b)})}var wt=class extends R.TreeItem{constructor(i){super({label:""});this.contextValue="commit",i.length>0&&(this.collapsibleState=R.TreeItemCollapsibleState.Collapsed),this.files=i}},bt=class extends R.TreeItem{constructor(i,s,o){super({label:vt.basename(i)});this.description=vt.dirname(i),this.resourceUri=R.Uri.parse(vt.join(s,i)),this.sha=o,this.command={title:"Patch",command:"git-blame.branchView.showPatch",arguments:[this.resourceUri.fsPath,this.sha]},this.contextValue="file"}},xt=class extends R.TreeItem{constructor(i,s,o,r){super({label:s});this.contextValue="branch",this.collapsibleState=R.TreeItemCollapsibleState.Collapsed,this.sha=new O(i),this.name=s,this.date=o,this.summary=r,this.description=o,this.tooltip=r}},Ke=class{constructor(){this._onDidChangeTreeData=new R.EventEmitter;this.onDidChangeTreeData=this._onDidChangeTreeData.event;this.hasRefreshed_=!1;this.maxCommitCount_=50;this.uri_=R.Uri.parse("")}getTreeItem(e){return e}getChildren(e){return new Promise(async(i,s)=>{if(!this.hasRefreshed_)return i([]);if(e){let o=e;if(!o.sha.getSha())return i([]);let n=await ms(o.sha,this.uri_,this.getTopLevelGitDir());return i(n?n.files:[])}this.getBranch().then(o=>i(o))})}refresh(e){this.uri_=e,this.topLevelGitDir_=k(e),this.topLevelGitDir_&&(this.hasRefreshed_=!0,this._onDidChangeTreeData.fire())}async getBranch(){return new Promise((e,i)=>{let s=R.window.activeTextEditor?.document.uri;if(!s)return e([]);let o=["branch",'--format="%(objectname)	%(refname:short)	%(authordate:short)	%(subject)"',"--sort=-authordate"],[r,n,c]=y(s,o),d=fi.spawn(r,n,c),u="";d.on("error",m=>{i()}),d.on("exit",(m,a)=>{let l=[],b=new RegExp(/^([^\t]+)\t([^\t]+)\t([^\t]+)\t([^\t]+)$/gm),f=u.matchAll(b);if(!!f){for(let h of f){let[g,C,E,p,v]=h,T=new xt(C,E,p,v);l.push(T)}e(l)}}),d.stdout.on("data",m=>u+=m.toString())})}openLog(e,i){j({sha:e},i)}setMaxNumberOfCommits(e){this.maxCommitCount_=e}getUri(){return this.uri_}getTopLevelGitDir(){return this.topLevelGitDir_}};var ds=require("path");function pi(t){let e=new Ke,i=Y.window.createTreeView("gitBlameBranchView",{treeDataProvider:e});hi(e),t.subscriptions.push(Y.commands.registerTextEditorCommand("git-blame.branchView.refresh",s=>{!i.visible||e.refresh(s.document.uri)})),t.subscriptions.push(Y.commands.registerCommand("git-blame.branchView.showPatch",(s,o)=>{!i.visible||q.showPatch(s,o)})),t.subscriptions.push(Y.workspace.onDidChangeConfiguration(s=>{s.affectsConfiguration("git-blame.branchView.maxCommitCount")&&hi(e)})),t.subscriptions.push(Y.commands.registerCommand("git-blame.branchView.openArtifact",s=>{let o=s.resourceUri,r=s.sha,n=o.with({scheme:"git",query:JSON.stringify({ref:r,path:o.fsPath})}),c=`${ds.basename(n.fsPath)} ${r.slice(0,3)}`;Y.commands.executeCommand("vscode.open",n,{},c)}))}function hi(t){let e=Y.workspace.getConfiguration("git-blame"),i="branchView.maxCommitCount",s=e.get(i)??50;t.setMaxNumberOfCommits(s)}function gi(t){ti(t),ri(t),ai(t),di(t),li(t),pi(t),t.subscriptions.push(Ze.commands.registerCommand("git-blame.treeView.openResourceUri",e=>{Ze.commands.executeCommand("vscode.open",e.resourceUri)})),Ze.commands.registerTextEditorCommand("git-blame.treeView.openLog",(e,i,s)=>{let o=s.sha.getSha();!o||j({sha:o},e.document.uri,!1)})}var X=P(require("vscode"));var fs=require("fs"),Ct=new Set,Ee=new Map,xe=new Map;function vi(t){!t||Ct.has(t.fsPath)||bi(t)&&Ct.add(t.fsPath)}function hs(t){Ct.delete(t.fsPath);let e=k(t);if(!e||!xe.has(e))return;let i=xe.get(e);!i||(i.delete(t.fsPath),i.size===0&&(Ee.get(e)?.close(),Ee.delete(e),xe.delete(e)))}function wi(t){t.subscriptions.push(X.workspace.onDidOpenTextDocument(e=>vi(e.uri))),t.subscriptions.push(X.window.onDidChangeActiveTextEditor(e=>vi(e?.document.uri))),t.subscriptions.push(X.workspace.onDidCloseTextDocument(e=>hs(e.uri)))}function bi(t){let e;if(t)e=t;else{if(X.window.activeTextEditor===void 0)return!1;e=X.window.activeTextEditor.document.uri}if(e.scheme!=="file")return!1;let i=k(e);return i?(Ee.has(i)&&Ee.get(i)?.close(),Ee.set(i,fs.watch(`${i}/.git/HEAD`,{persistent:!1},ps)),xe.has(i)||xe.set(i,new Set),xe.get(i).add(e.fsPath),!0):!1}function ps(t,e){bi();let i=V.prefix;X.commands.executeCommand(`${i}.blamer.clearData`),X.commands.executeCommand(`${i}.blamer.updateStatusBar`)}var fe=P(require("vscode"));var Ie=P(require("vscode"));var Ye=P(require("vscode")),xi=P(require("child_process"));var vs=require("path");function ws(t){let e=["log",'--format="%H%ae %cs%s"'];if(t.sha)return e.push(t.sha,"-1"),e;if(t.author&&e.push(`--author=${t.author}`),t.message&&e.push(`--grep=${t.message}`),t.patch&&e.push(`-S ${t.patch}`),t.file){let i=t.file;!i.startsWith('"')&&!i.endsWith('"')&&(i=`"${i}"`),e.push(`-- ${t.file}`)}return e}async function Ci(t,e,i){let s=Ye.window.createQuickPick();s.busy=!0,s.show(),s.keepScrollPosition=!0;let o={};i.split(" ").forEach(h=>{if(h.length<2||h[1]!=":")return;let g=h.slice(0,1),C=h.slice(2);switch(g){case"a":{o.author=C;break}case"m":{o.message=C;break}case"f":{o.file=C;break}case"p":{o.patch=C;break}case"s":{o.sha=C;break}}});let r=k(e.document.uri);if(!r)return;let n=Ye.Uri.parse(vs.join(r,"thisStubIsNeeded")),c=ws(o),[d,u,m]=y(n,c),a=xi.spawn(d,u,m);a.on("error",h=>console.log("error",h));let l="",b=new RegExp(/^([0-9a-fA-F]{40})([^\s]+) (\d{4}\-\d{2}\-\d{2})(.*)$/gm),f=()=>{let h=[],g=l.matchAll(b);for(let C of g){let[E,p,v,T,w]=C,D=w,I=`${T} ${v}`;h.push({label:D,sha:p,description:I})}return h};a.stdout.on("data",h=>{l+=h.toLocaleString(),s.items=f()}),a.on("exit",(h,g)=>{if(s.items=f(),l.length===0){s.hide();return}s.busy=!1}),s.onDidAccept(()=>{let h=s.selectedItems[0].sha;!h||se(e,h)}),s.onDidHide(()=>{s.dispose(),a.killed||a.kill()})}var Tt=class{constructor(e){this.key_="extension.git-search";this.context_=e;let i=this.context_.workspaceState.get(this.key_);typeof i!="string"&&(i="{}");let s;try{s=JSON.parse(i)}catch{s="{}"}this.map_=new Map(Object.entries(s)),this.update()}visit(e){this.delete(e),this.map_.set(e,Date.now()),this.update()}update(){let e=JSON.stringify(Object.fromEntries(this.map_));this.context_.workspaceState.update(this.key_,e)}delete(e){this.map_.delete(e),this.update()}keys(){return[...this.map_.keys()].reverse()}};function Ti(t,e){return e.keys().map(i=>({label:i,buttons:t}))}async function Pi(t,e){let i=new Tt(t),s=Ie.window.createQuickPick();s.busy=!0,s.show(),s.title="Query?",s.placeholder="a:author m:message f:file p:patch s:sha";let o=[],r=(n,c)=>{o.push({iconPath:n,tooltip:c})};r(new Ie.ThemeIcon("pencil"),"Edit"),r(new Ie.ThemeIcon("close"),"Remove"),s.items=Ti(o,i),s.busy=!1,s.onDidTriggerItemButton(n=>{switch(n.button.tooltip){case"Edit":{s.value=n.item.label;break}case"Remove":{i.delete(n.item.label),s.items=Ti(o,i);break}}}),s.onDidAccept(()=>{s.hide();let n=s.value;s.value===""&&s.activeItems.length>0&&(n=s.activeItems[0].label),n&&n!==""&&!new RegExp(/^\s+$/).test(n)&&i.visit(n),Ci(t,e,n)}),s.onDidHide(()=>s.dispose())}var Xe=P(require("vscode")),et=P(require("child_process"));var Ce;async function Di(t,e,i,s,o){return new Promise((r,n)=>{let c=[...e,"-1",`--skip=${o}`],[d,u,m]=y(i,c);Ce=et.spawn(d,u,m),Ce.on("error",f=>console.log("error",f));let a="",l=new RegExp(/([0-9a-fA-F]{40})([^\s]+) (\d{4}\-\d{2}\-\d{2})([^\n]+)(.*)/s),b=()=>{let f=[],h=a.match(l);if(!h)return f;let[g,C,E,p,v,T]=Array.from(h),w=v,D=`${p} ${E} ${T}`;return f.push({label:w,sha:C,description:D}),[...s,...f]};Ce.stdout.on("data",f=>{a+=f.toLocaleString();let h=b();!h||h.length===0||(t.items=h)}),Ce.on("exit",async(f,h)=>{if(!a&&a!=""){r();return}let g=b();if(!g||g.length===0){r();return}t.items=g,await Di(t,e,i,g,o+1),r()})})}async function ki(t){let e=Xe.window.createQuickPick();e.busy=!0,e.show(),e.keepScrollPosition=!0;let i=t.document.uri;if(!k(i))return;let o=t.selection.active.line+1,r=t.document.uri.fsPath,n="";i.query&&(n=JSON.parse(i.query).ref);let c=await Xe.commands.executeCommand("gitBlame.getShaForCurrentLine"),d=[],u=0;if(c){let a=["log",c,"-1",'--format="%ae %cs%s"'],[l,b,f]=y(i,a),g=et.spawnSync(l,b,f).stdout.match(/([^\s]+) (\d{4}\-\d{2}\-\d{2})([^\n]+)/);if(g){let[C,E,p,v]=g;d.push({label:v,description:`${p} ${E}`,sha:c}),e.items=d,u++}}let m=["log",n,"-L",`${o},+1:"${r}"`,'--format="%H%ae %cs%s"'];Di(e,m,i,d,u).then(()=>{if(e.items.length===0){e.hide();return}e.busy=!1}),e.onDidAccept(()=>{let a=e.selectedItems[0].sha;!a||se(t,a)}),e.onDidHide(()=>{e.dispose(),Ce.killed||Ce.kill()})}var yi=P(require("vscode")),_i=P(require("child_process"));var Te;async function Si(t,e,i,s,o){return new Promise((r,n)=>{let c=[...e,`--skip=${o}`,"-1","--",`"${i.fsPath}"`],[d,u,m]=y(i,c);Te=_i.spawn(d,u,m),Te.on("error",f=>console.log("error",f));let a="",l=new RegExp(/^([0-9a-fA-F]{40})([^\s]+) (\d{4}\-\d{2}\-\d{2})(.*)/s),b=()=>{let f=[],h=a.match(l);if(!h)return f;let[g,C,E,p,v]=Array.from(h),T=v,w=`${p} ${E}`;return f.push({label:T,sha:C,description:w}),[...s,...f]};Te.stdout.on("data",f=>{a+=f.toLocaleString();let h=b();!h||h.length===0||(t.items=h)}),Te.on("exit",async(f,h)=>{if(!a&&a!=""){r();return}let g=b();if(!g||g.length===0){r();return}t.items=g,await Si(t,e,i,g,o+1),r()})})}async function Ei(t){let e=yi.window.createQuickPick();if(e.busy=!0,e.show(),e.keepScrollPosition=!0,!k(t.document.uri))return;let s="";t.document.uri.query&&(s=JSON.parse(t.document.uri.query).ref),Si(e,["log",s,'--format="%H%ae %cs%s"'],t.document.uri,[],0).then(()=>{if(e.items.length===0){e.hide();return}e.busy=!1}),e.onDidAccept(()=>{let r=e.selectedItems[0].sha;!r||se(t,r)}),e.onDidHide(()=>{e.dispose(),Te.killed||Te.kill()})}var tt=P(require("vscode")),Ii=P(require("child_process"));var bs=require("path");function xs(t,e){let i=[],s=t.matchAll(e);for(let o of s){let[r,n,c,d,u]=o,m=u,a=`${d} ${c}`;i.push({label:m,sha:n,description:a})}return i}async function Li(t,e){let i=tt.window.createQuickPick();i.busy=!0,i.show(),i.keepScrollPosition=!0;let s=new RegExp(/^([0-9a-fA-F]{40})([^\s]+) (\d{4}\-\d{2}\-\d{2})(.*)$/gm),o=k(e.document.uri);if(!o)return;let r=tt.Uri.parse(bs.join(o,"thisStubIsNeeded")),n=["reflog",'--format="%H%ae %cs%s"'],[c,d,u]=y(r,n),m=Ii.spawn(c,d,u);m.on("error",l=>console.log("error",l));let a="";m.stdout.on("data",l=>{a+=l.toLocaleString(),i.items=xs(a,s)}),m.on("exit",(l,b)=>{if(a.length===0){i.hide();return}i.busy=!1}),i.onDidAccept(()=>{let l=i.selectedItems[0].sha;!l||se(e,l)}),i.onDidHide(()=>{i.dispose(),m.killed||m.kill()})}function Ui(t){t.subscriptions.push(fe.commands.registerTextEditorCommand("git-blame.command.search",e=>Pi(t,e))),t.subscriptions.push(fe.commands.registerTextEditorCommand("git-blame.command.lineHistory",e=>ki(e))),t.subscriptions.push(fe.commands.registerTextEditorCommand("git-blame.command.fileHistory",e=>Ei(e))),t.subscriptions.push(fe.workspace.registerTextDocumentContentProvider("git-blame.provider.fullPatch",new ve)),t.subscriptions.push(fe.commands.registerTextEditorCommand("git-blame.command.reflog",e=>Li(t,e)))}var B=P(require("vscode"));var Dt=[],kt,Fi,$i,Pt;function Ts(t){(t.affectsConfiguration("git-blame.config.showBlameInline")||t.affectsConfiguration("git-blame.config.inlineBlameStartColumn")||t.affectsConfiguration("git-blame.config.inlineBlameHoverMessage"))&&Ai()}function Ai(){let t=B.workspace.getConfiguration("git-blame");kt=t.get("config.showBlameInline")??!0,kt||yt();let e=Number(t.get("config.inlineBlameStartColumn"));Fi=isNaN(e)?80:e,$i=t.get("config.inlineBlameHoverMessage")||!1}function Ps(t){if(!kt)return;let e=B.window.activeTextEditor;!e||e.document.isDirty||!Ds(e)||ys(e,t)}function Ds(t){let e;return t.document.languageId==="markdown"?(e=B.workspace.getConfiguration("[markdown]"),e.editor.wordWrap==="off"):(e=B.workspace.getConfiguration("editor"),e.wordWrap==="off")}function Bi(t){Ai(),t.subscriptions.push(B.workspace.onDidChangeConfiguration(e=>Ts(e))),B.commands.executeCommand("git-blame.commands.onShaListingIndexedByLine",e=>Ps(e))}function yt(){Dt.forEach(t=>t.dispose()),Dt.length=0}function ks(t,e){let i=[],s=0;for(let o=0;o<t.length;o++)switch(t.charAt(o)){case`
`:{i.push(s),s=0;break}case"	":{s+=e;break}default:{s++;break}}return i.push(s),i}async function ys(t,e){yt();let i=await B.commands.executeCommand("git-blame.commands.getAllCommits");if(i.size===0)return;let s=t.options.tabSize,o=ks(t.document.getText(),s),r="",n="#696969",c="0".repeat(40);for(let d=0;d<e.length;d++){if(e[d]===r)continue;r=e[d];let u=Math.max(Fi,Math.max(...o)),m=o[d],a="\u2002".repeat(u-m+1),l=new B.Position(d,m),b=new B.Range(l,l),f=e[d],h=i.get(f);if(!h)return;let{date:g,mail:C,summary:E,author:p}=h,v=C?.slice(C.indexOf("<")+1,C.indexOf(">")),T=[{range:b}];$i&&(T=[{range:b,hoverMessage:v}]);let w=`${a}${ie(g)} ${p}`;f!==c&&(w+=` ${E}`);let D=B.window.createTextEditorDecorationType({after:{contentText:w,color:n}});Dt.push(D),t.setDecorations(D,T)}Pt=B.workspace.onDidChangeTextDocument(d=>{Pt?.dispose(),Pt=void 0,yt()})}var K=P(require("vscode"));var z=P(require("vscode"));async function Vi(t,e,i){return new Promise((s,o)=>{let r=t.getSha();if(!r)return s(void 0);let n=["log","--format=''","--name-only",r,"-1"];s(re.run(n,i))})}var _t=require("path"),St=class extends z.TreeItem{constructor(i){super({label:""});this.contextValue="commit",i.length>0&&(this.collapsibleState=z.TreeItemCollapsibleState.Collapsed),this.files=i}},Et=class extends z.TreeItem{constructor(i,s,o){super({label:_t.basename(i)});this.description=_t.dirname(i),this.resourceUri=z.Uri.parse(_t.join(s,i)),this.sha=new O(o),this.command={title:"Patch",command:"git-blame.visibleCommitsView.showPatch",arguments:[this.resourceUri.fsPath,this.sha]},this.contextValue="file"}},It=class extends z.TreeItem{constructor(i,s){let o=i.commit,r=o.summary??"";super({label:r});this.date=ie(o.date),this.author=o.author?.trim(),this.description=`${this.date} ${this.author}`,this.sha=new O(o.sha),this.contextValue="commit",this.collapsibleState=z.TreeItemCollapsibleState.Collapsed}};async function Es(t,e,i){return new Promise(async(s,o)=>{let r=await Vi(t,1,i);if(!r)return s(void 0);let n=new RegExp(/(.+)/s),c=r.match(n);if(!c)return s(void 0);let d=k(i);if(!d)return s(void 0);let u=t.getSha();if(!u)return;let[m,a]=c,l=a.trim().split(`
`).filter(f=>f!="").map(f=>new Et(f,d,u)),b=new St(l);s(b)})}var it=class{constructor(){this.onDidChangeTreeData_=new z.EventEmitter;this.onDidChangeTreeData=this.onDidChangeTreeData_.event;this.map_=new Map}getTreeItem(e){return e}getChildren(e){let i=this.uri_;if(!i)return[];if(e){if(!e.id||!this.uri_)return[];let o=new O(e.id);return Es(o,1,this.uri_).then(n=>n?.files)}let s=[];for(let[o,r]of this.map_)s.push(new It(r,i));return s}getParent(e){return{}}resolveTreeItem(e,i,s){}refresh(e,i){this.map_=e,this.onDidChangeTreeData_.fire(),this.uri_=i}};var Lt;function Oi(t){let e=new it,i=K.window.createTreeView("gitBlameVisibleCommitsView",{treeDataProvider:e});K.commands.executeCommand("git-blame.commands.onAllShasForFile",s=>{let o=K.window.activeTextEditor;o?.document.isDirty||!i.visible||Is(s,o?.document?.uri)}),K.commands.registerCommand("git-blame.commands.toOutputPanel",(s,o)=>{e.refresh(s,o)}),t.subscriptions.push(K.commands.registerCommand("git-blame.visibleCommitsView.showPatch",(s,o)=>{!i.visible||q.showPatch(s,o)}))}async function Is(t,e){let i=await K.commands.executeCommand("git-blame.commands.getAllCommits"),s=new Map;for(let r=0;r<t.length;r++){let n=t[r],c=i.get(n);if(!c)return;n!=="0".repeat(40)&&s.set(n,{commit:c})}let o=new Map([...s.entries()].sort((r,n)=>(r[1].commit.date??"").localeCompare(n[1].commit.date??"")).reverse());K.commands.executeCommand("git-blame.commands.toOutputPanel",o,e),Lt=K.window.onDidChangeVisibleTextEditors(r=>{Lt?.dispose(),Lt=void 0,K.commands.executeCommand("git-blame.commands.toOutputPanel",[])})}var Ft=class{equals(e,i){return this.file==e&&this.line==i}set(e,i){this.file=e,this.line=i}};async function Us(t){Be()===""&&Nt("gitWebUrl",t.get("url")??"")}function Ut(){return!(!V.showStatusBar||!De("showStatusBar"))}function Fs(t){let e=t.extension.id,i="solomonkinard";e.startsWith(i)&&(e=e.slice(i.length+1)),V.prefix=e;let s=new Me(t);Us(s);let o=new Ft,r=V.prefix+".statusClick";t.subscriptions.push(S.commands.registerTextEditorCommand(r,a=>Jt(a)));let n=S.window.createStatusBarItem(S.StatusBarAlignment.Right);n.command=r,t.subscriptions.push(n),n.show(),t.subscriptions.push(S.workspace.onDidChangeConfiguration(a=>{a.affectsConfiguration("git-blame.showStatusBar")&&(Ut()?n.show():n.hide())})),t.subscriptions.push(S.commands.registerCommand(V.prefix+".setStatus",(a,l)=>{!Ut()||(n.text=a,n.tooltip=l)}));let c=a=>{!a||!Ut()||(n.text="",qt(a))};t.subscriptions.push(S.window.onDidChangeTextEditorSelection(a=>{let b=a.textEditor.document.uri,f=a.textEditor.selection.active.line;o.equals(b,f)||(o.set(b,f),c(a.textEditor))}));let d=a=>{let l=S.window.activeTextEditor;if(!l){n.text="";return}a(l)};t.subscriptions.push(S.workspace.onDidCloseTextDocument(a=>{d(l=>{})}));let u=1e3,m;t.subscriptions.push(S.workspace.onDidChangeTextDocument(a=>{m&&(clearTimeout(m),m=void 0),m=setTimeout(()=>d(l=>c(l)),u)})),t.subscriptions.push(S.window.onDidChangeActiveTextEditor(a=>{d(l=>c(l))})),t.subscriptions.push(S.workspace.onDidSaveTextDocument(a=>{d(l=>{Ge(),c(l)})})),d(a=>{Ge(),c(a)}),t.subscriptions.push(S.workspace.registerTextDocumentContentProvider(`${e}.gitDiff`,new ve)),t.subscriptions.push(S.workspace.registerTextDocumentContentProvider(`${e}.diffWorkingTree`,new qe)),t.subscriptions.push(S.commands.registerTextEditorCommand(`${e}.gitDiff.next`,a=>{Kt(a)})),t.subscriptions.push(S.commands.registerTextEditorCommand(`${e}.gitDiff.prev`,a=>{Zt(a)})),t.subscriptions.push(S.commands.registerCommand("gitBlame.getShaForCurrentLine",()=>{let a=S.window.activeTextEditor;if(!!a)return at(a)})),gi(t),t.subscriptions.push(S.commands.registerTextEditorCommand(`${e}.OpenCommitOnTheWeb`,a=>{let l=at(a);!l||Oe(l)})),t.subscriptions.push(S.commands.registerCommand(`${e}.blamer.clearData`,()=>Ge())),t.subscriptions.push(S.commands.registerCommand(`${e}.blamer.updateStatusBar`,()=>d(a=>{}))),wi(t),Ui(t),Bi(t),Oi(t),t.subscriptions.push(S.commands.registerCommand("git-blame.commands.onShaForCurrentLine",a=>Qe("onShaForCurrentLine",a))),t.subscriptions.push(S.commands.registerCommand("git-blame.commands.onAllShasForFile",a=>Qe("onAllShasForFile",a))),t.subscriptions.push(S.commands.registerCommand("git-blame.commands.onShaListingIndexedByLine",a=>Qe("onShaListingIndexedByLine",a))),t.subscriptions.push(S.commands.registerCommand("git-blame.commands.getAllCommits",()=>zt())),t.subscriptions.push(S.commands.registerTextEditorCommand("git-blame.commands.showPatch",async a=>{let l=a.document.uri,b=await S.window.showInputBox();if(!b)return;let f=k(a.document.uri);if(!f)return;let h=l.fsPath.substring(f.length);ye(f,l,b,h,"Patch")})),t.subscriptions.push(S.commands.registerTextEditorCommand("git-blame.commands.getAllShasForFile",a=>Wt()))}function $s(){}0&&(module.exports={activate,deactivate});
